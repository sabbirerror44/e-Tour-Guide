[{"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\index.js":"1","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\App.js":"2","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\reportWebVitals.js":"3","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\TourPlaceData\\TourPlaceData.js":"4","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Header\\Header.js":"5","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Home\\Home.js":"6","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\PlaceDetails\\PlaceDetails.js":"7","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Login\\Login.js":"8","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\CheckOut\\CheckOut.js":"9","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Booking\\Booking.js":"10","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Login\\firebase.config.js":"11","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\PrivateRoute\\PrivateRoute.js":"12","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\HotelData\\HotelData.js":"13","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\HotelDetails\\HotelDetails.js":"14"},{"size":547,"mtime":1609916827857,"results":"15","hashOfConfig":"16"},{"size":1575,"mtime":1610376728617,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2514,"mtime":1609959767701,"results":"19","hashOfConfig":"16"},{"size":2715,"mtime":1610389803723,"results":"20","hashOfConfig":"16"},{"size":1688,"mtime":1610004180645,"results":"21","hashOfConfig":"16"},{"size":547,"mtime":1610363201584,"results":"22","hashOfConfig":"16"},{"size":7647,"mtime":1610380905990,"results":"23","hashOfConfig":"16"},{"size":1051,"mtime":1610378284042,"results":"24","hashOfConfig":"16"},{"size":2444,"mtime":1610362515905,"results":"25","hashOfConfig":"16"},{"size":353,"mtime":1610262212342,"results":"26","hashOfConfig":"16"},{"size":791,"mtime":1610358379612,"results":"27","hashOfConfig":"16"},{"size":1223,"mtime":1610377597235,"results":"28","hashOfConfig":"16"},{"size":1331,"mtime":1610378264840,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"111mjsd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\index.js",[],["63","64"],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\App.js",["65"],"import React, { createContext, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport PlaceDetails from './components/PlaceDetails/PlaceDetails';\nimport Login from './components/Login/Login';\nimport CheckOut from './components/CheckOut/CheckOut';\nimport Booking from './components/Booking/Booking';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport HotelDetails from './components/HotelDetails/HotelDetails';\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({});\n  return (\n   <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n     <Router>\n       <Header></Header>\n       <Switch>\n         <Route path=\"/home\">\n            <Home></Home>\n         </Route>\n         <Route path=\"/booking/:id\">\n            <Booking></Booking>\n         </Route>\n         <Route path=\"/placeDetails\">\n            <PlaceDetails></PlaceDetails>\n         </Route>\n         <Route path=\"/HotelDetails\">\n            <HotelDetails></HotelDetails>\n         </Route>\n         <Route path=\"/login\">\n            <Login></Login>\n         </Route>\n         <PrivateRoute path=\"/checkout/:id\">\n            <CheckOut></CheckOut>\n         </PrivateRoute>\n        \n         <Route exact path=\"/\">\n             <Home></Home>\n         </Route>\n\n       </Switch>\n     </Router>\n   </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\reportWebVitals.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\TourPlaceData\\TourPlaceData.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Header\\Header.js",["66","67"],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Home\\Home.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\PlaceDetails\\PlaceDetails.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Login\\Login.js",["68"],"import React, { useContext, useState } from 'react';\r\nimport \"./Login.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nif(firebase.apps.length === 0) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst Login = () => {\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user,setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        photo: '',\r\n        email: ''\r\n    })\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\n        const handleGoogleSignIn = () => {\r\n            firebase.auth().signInWithPopup(googleProvider)\r\n                .then((res) => {\r\n                    const {displayName, photoURL, email} = res.user;\r\n                    const SignedInUser = {\r\n                        isSignedIn: true,\r\n                        name: displayName,\r\n                        photo: photoURL,\r\n                        email: email\r\n                    }\r\n                    setUser(SignedInUser);\r\n                    setLoggedInUser(SignedInUser);\r\n                    history.replace(from);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n            }\r\n\r\n        const handleFbSignIn = ()=>{\r\n            firebase.auth().signInWithPopup(fbProvider)\r\n                    .then((res) => {\r\n                        const {displayName, photoURL, email} = res.user;\r\n                        const SignedInUser = {\r\n                            isSignedIn: true,\r\n                            name: displayName,\r\n                            photo: photoURL,\r\n                            email: email\r\n                        }\r\n                        setUser(SignedInUser);\r\n                        setLoggedInUser(SignedInUser);\r\n                        history.replace(from);       \r\n                    })\r\n                    .catch((error) => {\r\n                    console.log(error);\r\n                    });\r\n        }\r\n\r\n        const handleBlur = (e) => {\r\n            let isFieldValid = true;\r\n            if(e.target.name === 'email'){\r\n                isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n            }\r\n            if(e.target.name === 'password'){\r\n                const isPasswordValid = e.target.value.length > 5;\r\n                const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n                isFieldValid = isPasswordValid && passwordHasNumber;\r\n            }\r\n\r\n            if(isFieldValid){\r\n                const newUserInfo = {...user};\r\n                newUserInfo.isSignedIn = true;\r\n                newUserInfo[e.target.name] = e.target.value;\r\n                setUser(newUserInfo);\r\n            }\r\n        }\r\n        const handleClick = () => {\r\n            setNewUser(!newUser);\r\n        }\r\n        const handleSubmit = (e) => {\r\n            if(newUser && user.email && user.password)\r\n            { \r\n                firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n                .then(res=>{\r\n                    const newUserInfo = {...user};\r\n                    newUserInfo.error= '';\r\n                    newUserInfo.success= true;\r\n                    setUser(newUserInfo);\r\n                    updateUserName(user.name);\r\n                })\r\n                .catch(error => {\r\n                    const newUserInfo = {...user};\r\n                    newUserInfo.error = error.message;\r\n                    newUserInfo.success = false;\r\n                    setUser(newUserInfo);\r\n                });\r\n            }\r\n\r\n            if(!newUser && user.email && user.password){\r\n                firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n                .then( res => {\r\n                    const newUserInfo = {...user};\r\n                    newUserInfo.error= '';\r\n                    newUserInfo.success = true;\r\n                    setUser(newUserInfo);\r\n                    setLoggedInUser(newUserInfo);\r\n                    history.replace(from);\r\n                })\r\n                \r\n                .catch(error => {\r\n                    const newUserInfo = {...user};\r\n                    newUserInfo.error = error.message;\r\n                    newUserInfo.success = false;\r\n                    setUser(newUserInfo);\r\n                });\r\n\r\n            }\r\n            \r\n            e.preventDefault();\r\n        }\r\n        const updateUserName = (name) => {\r\n            const user = firebase.auth().currentUser;\r\n\r\n            user.updateProfile({\r\n                displayName: name\r\n            }).then(function(){\r\n                console.log(\"user name updated successfully\");\r\n            }).catch(function(error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginStyle text-center pt-4\">\r\n        \r\n                <h5>{newUser?'Create an Account':'Login'}</h5>\r\n                 <form onSubmit={handleSubmit}>\r\n                   { newUser && <input type=\"text\" name=\"name\" onBlur={handleBlur} placeholder=\"First Name\" required/>} <br/>\r\n         \r\n                    { newUser && <input type=\"text\" name=\"lname\" onBlur={handleBlur} placeholder=\"Last Name\" required/> }<br/>\r\n                    \r\n                    <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Username or Email\" required/><br/>\r\n                    \r\n                    <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Password\" required/><br/>\r\n                    \r\n                    { newUser && <input type=\"password\" name=\"confirmPass\" onBlur={handleBlur} placeholder=\"Confirm Password\" required/> }\r\n                    \r\n                    <input type=\"submit\" className=\"submitButton\" value={newUser?'Create an Account':'Login'}/>\r\n                {\r\n                    newUser ? <p>Already have an account? <button onClick={handleClick} className=\"text-warning toggle\">Login</button></p> : <p>Don't have an account? <button onClick={handleClick} className=\"text-warning toggle\">Create an Account</button></p> \r\n                 \r\n                }\r\n\r\n                {/* <button type=\"button\" class=\"btn btn-warning btn-lg btn-block w-75 mx-auto\">Create an Account</button>\r\n                <p>Already have an account? <a href=\"#\" className=\"text-warning\">Sign In</a></p> */}\r\n                </form>\r\n            </div>\r\n               <p className=\"text-center\" style={{color: 'red'}}>{user.error}</p>\r\n              {user.success && <p className=\"text-center\" style={{color: 'green'}}>User {newUser ? 'Created' : 'Logged In'} Successfully</p>}\r\n                <div className=\"text-center\">\r\n                     <h5>or</h5>\r\n                    <button onClick={handleGoogleSignIn} className=\"fbGoogleLogin mb-2\"><img src=\"https://i.ibb.co/5YTSkQR/google.png\"  height=\"37px\" width=\"37px\" alt=\"\"/> Continue With Google</button><br/>\r\n                    <button onClick={handleFbSignIn} className=\"fbGoogleLogin\"><img src=\"https://i.ibb.co/J7yrfB2/fb.png\" height=\"37px\" width=\"37px\" alt=\"\"/> Continue With Facebook</button>\r\n                </div>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\CheckOut\\CheckOut.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Booking\\Booking.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\Login\\firebase.config.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\PrivateRoute\\PrivateRoute.js",["69"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n            <Route\r\n                {...rest}\r\n                render={({ location }) =>\r\n                    loggedInUser.email ? (\r\n                    children\r\n                    ) : (\r\n                    <Redirect\r\n                        to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: location }\r\n                        }}\r\n                    />\r\n                    )\r\n                }\r\n                />\r\n            \r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\HotelData\\HotelData.js",[],"C:\\Users\\88013\\Desktop\\Web Dev Projects\\travel-guru\\src\\components\\HotelDetails\\HotelDetails.js",["70"],"import React from 'react';\r\nimport \"./HotelDetails.css\";\r\n\r\nconst HotelDetails = (props) => {\r\n    const {title, room, facility1, facility2, rating, price, totalPrice, img} = props.hotel;\r\n\r\n    const hotelImg = {\r\n        backgroundImage: `url(\"${img}\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: '100% 100%'\r\n    }\r\n    return (\r\n           <div className=\"d-flex\">\r\n                <div style={hotelImg} className=\"design\">\r\n\r\n                 </div>\r\n\r\n                <div className=\"contentStyle\">\r\n                    <h6 className=\"pb-4\">{title}</h6>\r\n                    <p className=\"my-2 mx-1\">{facility1}</p>\r\n                    <p className=\"my-2 mx-1\">{facility2}</p>\r\n                    <div className=\"d-flex justify-content-between my-4\">\r\n\r\n                        <div className=\"d-flex\">\r\n                        <img src=\"https://i.ibb.co/bHBk1wG/star-1.png\" className=\"my-2\" width=\"16.54px\" height=\"15.58px\" alt=\"\"/>\r\n                        <p className=\"my-1 mx-1\">{rating}</p>\r\n                        </div>\r\n                        <p className=\"my-1 mx-1\">{price}</p>\r\n                        <p className=\"my-1 mx-1\">{totalPrice}</p>\r\n               \r\n                 </div>\r\n                </div>\r\n           </div>\r\n            \r\n    );\r\n};\r\n\r\nexport default HotelDetails;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":7},{"ruleId":"75","severity":1,"message":"79","line":9,"column":26,"nodeType":"77","messageId":"78","endLine":9,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":15,"column":21,"nodeType":"82","endLine":15,"endColumn":59},{"ruleId":"75","severity":1,"message":"83","line":22,"column":12,"nodeType":"77","messageId":"78","endLine":22,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":6,"column":26,"nodeType":"77","messageId":"78","endLine":6,"endColumn":41},{"ruleId":"75","severity":1,"message":"84","line":5,"column":19,"nodeType":"77","messageId":"78","endLine":5,"endColumn":23},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setLoggedInUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loggedInUser' is assigned a value but never used.","'room' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]